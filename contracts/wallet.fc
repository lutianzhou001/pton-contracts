#include "common/imports.fc";
#include "wallet/imports.fc";

() recv_internal(int my_balance, int msg_value, cell in_msg_full, slice in_msg_body) impure {
    ctx::init(my_balance, msg_value, in_msg_full, in_msg_body);
    if ctx.at(IS_BOUNCED) { 
        return ();
    }

    throw_unless(error::wrong_workchain, ctx.at(SENDER).address::check_workchain(params::workchain));
        
    storage::load();


    ;; to sent excesses on wallet deploy
    if equal_slices(ctx.at(SENDER), storage::minter_address) {   
        if handle_minter_messages() {
            return ();
        }
    }

    ;; processes owner std jetton transfer calls to detokenize ton and sent it to destination
    if equal_slices(ctx.at(SENDER), storage::owner_address) {   
        if handle_owner_messages() {
            return ();
        }
    }

    ;; processes user ton transfers to tokenize ton
    if handle_any_messages() {
        return ();
    }
    
    throw(error::wrong_op);
}
